workflows:
  web-to-mobile-apk:
    name: Smart Budget Tracker - Web to Mobile APK (Clean Working)
    max_build_duration: 60
    instance_type: mac_mini_m1
    environment:
      node: 20.11.0
      npm: 10.2.4
      java: 17
    cache:
      cache_paths:
        - $CM_BUILD_DIR/node_modules
        - ~/.gradle/caches
    scripts:
      - name: Install and build web app
        script: |
          npm install
          npm install @capacitor/core @capacitor/cli @capacitor/android
          
          npm run build || npx vite build --outDir dist/public
          
          mkdir -p dist/public
          if [ ! -f "dist/public/index.html" ]; then
            if [ -f "dist/index.html" ]; then
              cp -r dist/* dist/public/
            fi
          fi
          
          echo "Web build ready:"
          ls -la dist/public/
          
      - name: Setup Capacitor configuration
        script: |
          rm -f capacitor.config.ts capacitor.config.js
          
          cat > capacitor.config.json << 'EOF'
          {
            "appId": "com.smartbudgettracker",
            "appName": "Smart Budget Tracker",
            "webDir": "dist/public",
            "server": {
              "androidScheme": "https"
            }
          }
          EOF
          
      - name: Create Android project
        script: |
          npx cap add android
          npx cap copy android
          
          cd android
          if [ ! -f "capacitor.settings.gradle" ]; then
            echo 'include ":capacitor-android"' > capacitor.settings.gradle
          fi
          
      - name: Build signed APK
        script: |
          cd android
          
          keytool -genkey -v -keystore release.keystore -alias release -keyalg RSA -keysize 2048 -validity 10000 -dname "CN=Smart Budget Tracker, OU=Finance, O=SmartApps, L=Kathmandu, S=Province3, C=NP" -storepass release123 -keypass release123
          
          cat >> app/build.gradle << 'EOF'
          
          android {
              signingConfigs {
                  release {
                      storeFile file('../release.keystore')
                      storePassword 'release123'
                      keyAlias 'release'
                      keyPassword 'release123'
                  }
              }
              buildTypes {
                  release {
                      signingConfig signingConfigs.release
                      minifyEnabled false
                  }
              }
          }
          EOF
          
          ./gradlew clean assembleRelease
          
          echo "Generated APK files:"
          find app/build/outputs -name "*.apk"
          
    artifacts:
      - android/app/build/outputs/apk/release/*.apk
    publishing:
      email:
        recipients:
          - builds@smartbudgettracker.com
