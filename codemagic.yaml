workflows:
  web-to-mobile-apk:
    name: Smart Budget Tracker - Web to Mobile APK (Working)
    max_build_duration: 60
    instance_type: mac_mini_m1
    environment:
      node: 20.11.0
      npm: 10.2.4
      java: 17
    cache:
      cache_paths:
        - $CM_BUILD_DIR/node_modules
        - ~/.gradle/caches
    scripts:
      - name: Install dependencies and setup
        script: |
          # Install all dependencies
          npm install
          
          # Install Capacitor
          npm install @capacitor/core @capacitor/cli @capacitor/android
          
      - name: Create build script if missing
        script: |
          # Check if build script exists, if not create it
          if ! npm run build --dry-run 2>/dev/null; then
            echo "Creating build script..."
            # Create a simple build script that works with Vite
            npm install -g vite
            npm run dev &
            sleep 5
            kill $!
            vite build --outDir dist/public
          else
            echo "Build script exists, using it..."
            npm run build
          fi
          
          # Verify build output
          echo "Build output contents:"
          ls -la dist/
          if [ -d "dist/public" ]; then
            ls -la dist/public/
          else
            echo "Creating dist/public structure..."
            mkdir -p dist/public
            if [ -f "dist/index.html" ]; then
              cp -r dist/* dist/public/ || true
            fi
          fi
          
      - name: Setup Capacitor
        script: |
          # Create Capacitor config
          cat > capacitor.config.ts << 'EOF'
          import { CapacitorConfig } from '@capacitor/cli';
          
          const config: CapacitorConfig = {
            appId: 'com.smartbudgettracker',
            appName: 'Smart Budget Tracker',
            webDir: 'dist/public',
            server: {
              androidScheme: 'https'
            }
          };
          
          export default config;
          EOF
          
          # Initialize Capacitor
          npx cap init "Smart Budget Tracker" com.smartbudgettracker
          
      - name: Build mobile APK
        script: |
          # Add Android platform
          npx cap add android
          
          # Copy web assets
          npx cap copy
          npx cap sync
          
          # Verify assets copied
          echo "Checking Android assets:"
          ls -la android/app/src/main/assets/ || echo "Assets directory not found"
          
      - name: Generate signed APK
        script: |
          cd android
          
          # Create keystore
          keytool -genkey -v -keystore app.keystore \
            -alias key0 -keyalg RSA -keysize 2048 -validity 10000 \
            -dname "CN=Smart Budget Tracker, OU=Dev, O=Company, L=City, S=State, C=US" \
            -storepass android -keypass android
          
          # Update build.gradle for signing
          cat >> app/build.gradle << 'EOF'
          
          android.signingConfigs {
              release {
                  storeFile file('app.keystore')
                  storePassword 'android'
                  keyAlias 'key0'
                  keyPassword 'android'
              }
          }
          android.buildTypes.release.signingConfig android.signingConfigs.release
          EOF
          
          # Build APK
          ./gradlew assembleRelease
          
          # List output files
          echo "Generated files:"
          find . -name "*.apk" -o -name "*.aab" | head -10
          
    artifacts:
      - android/app/build/outputs/**/*.apk
      - android/app/build/outputs/**/*.aab
    publishing:
      email:
        recipients:
          - build@smartbudgettracker.com
